version: '3.9'

x-shared-env: &shared_env
  environment:
    LANG: C.UTF-8
    LC_ALL: C.UTF-8
    PYTHONDONTWRITEBYTECODE: 1
    PYTHONFAULTHANDLER: 1
    PYTHONUNBUFFERED: 1

x-shared-args: &shared_args
  VERSION_PIPENV:
  VERSION_PIP:
  BASE_IMAGE:

services:
  pipenv-generator:
    profiles:
      - pipenv
    image: ${PIPENV_IMAGE}
    hostname: pipenv-generator
    build: 
      context: docker
      dockerfile: pipenv-generator.dockerfile
      args:
        <<: *shared_args
    <<: *shared_env
    working_dir: /host
    volumes:
      - ./docker/pipenv-pipfile:/host
    tty: true

  flask-app:
    hostname: flask-app
    container_name: flask-app
    image: ${IMAGE_BASE_NAME}/flask-app:0.0.0
    build:
      context: docker
      dockerfile: flask-app.dockerfile
      args:
        <<: *shared_args
        PIPENV_IMAGE:
    <<: *shared_env
    ports:
      - ${APP_PORT}:9696
    deploy:
      replicas: 1
      mode: replicated

  flask-app-svizor:
    hostname: flask-app-svizor
    container_name: flask-app-svizor
    image: ${IMAGE_BASE_NAME}/flask-app-svizor:0.0.0
    build:
      context: docker
      dockerfile: flask-app-svizor.dockerfile
      args:
        <<: *shared_args
        PIPENV_IMAGE:
    <<: *shared_env
    ports:
      - ${APP_PORT_SVIZOR}:9696
    deploy:
      replicas: 1
      mode: replicated

  test-app:
    hostname: test-app
    container_name: test-app
    image: ${IMAGE_BASE_NAME}/test-app:0.0.0
    build: 
      context: docker
      dockerfile: testapp.dockerfile
      args:
        BASE_IMAGE:
    command: ["-c", "set -x && curl -X POST -H \"Content-Type: application/json\" -d @- http://${APP_HOST}:${APP_PORT}/${FUNCTION_NAME} 2>/dev/null | python -m json.tool"]
    depends_on:
      flask-app:
        condition: service_started
      flask-app-svizor:
        condition: service_started
    links: 
      - flask-app:serving
      - flask-app-svizor:serving
    # usage 'cat q3_customer.json | docker-compose run -T --rm test-app'
    environment:
      APP_HOST:
      APP_PORT:
      FUNCTION_NAME:
    working_dir: /workspace
    volumes:
      - ./:/workspace
    deploy:
      replicas: 1
      mode: replicated


